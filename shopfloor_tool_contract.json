{
  "toolName": "ShopfloorGraphTool",
  "version": "0.1.0",
  "description": "Query factory shopfloor graph for machines, sensors, operators, work orders, and maintenance logs.",
  "timeouts": {
    "defaultMs": 15000
  },
  "auth": {
    "type": "none"
  },
  "operations": {
    "highVibrationMachines": {
      "description": "List machines whose linked sensors exceed a reading threshold.",
      "inputs": {
        "threshold": {
          "type": "number",
          "required": true
        },
        "unit": {
          "type": "string",
          "required": true,
          "example": "mm/s"
        }
      },
      "cypher": "MATCH (m:Machine)-[:MONITORED_BY]->(s:Sensor) WHERE s.reading > $threshold AND s.unit = $unit RETURN m.id AS machineId, s.id AS sensorId, s.reading AS reading, s.timestamp AS at ORDER BY reading DESC",
      "outputs": [
        {
          "name": "machineId",
          "type": "string"
        },
        {
          "name": "sensorId",
          "type": "string"
        },
        {
          "name": "reading",
          "type": "number"
        },
        {
          "name": "at",
          "type": "string"
        }
      ],
      "examples": [
        {
          "inputs": {
            "threshold": 7.5,
            "unit": "mm/s"
          }
        }
      ]
    },
    "overdueWorkOrders": {
      "description": "Find machines that have overdue work orders.",
      "inputs": {},
      "cypher": "MATCH (m:Machine)-[:HAS_WORK_ORDER]->(w:WorkOrder) WHERE w.status = 'Overdue' RETURN m.id AS machineId, w.id AS workOrderId, w.scheduledTime AS due ORDER BY due ASC",
      "outputs": [
        {
          "name": "machineId",
          "type": "string"
        },
        {
          "name": "workOrderId",
          "type": "string"
        },
        {
          "name": "due",
          "type": "string"
        }
      ],
      "examples": [
        {
          "inputs": {}
        }
      ]
    },
    "currentOperator": {
      "description": "Get the current operator for a machine.",
      "inputs": {
        "machineId": {
          "type": "string",
          "required": true
        }
      },
      "cypher": "MATCH (m:Machine {id: $machineId})- [r:OPERATED_BY]->(o:Operator) RETURN m.id AS machineId, o.id AS operatorId, o.name AS operatorName, r.shift AS shift",
      "outputs": [
        {
          "name": "machineId",
          "type": "string"
        },
        {
          "name": "operatorId",
          "type": "string"
        },
        {
          "name": "operatorName",
          "type": "string"
        },
        {
          "name": "shift",
          "type": "string"
        }
      ],
      "examples": [
        {
          "inputs": {
            "machineId": "M100"
          }
        }
      ]
    },
    "sensorsByZone": {
      "description": "List sensors attached to machines located in a given zone.",
      "inputs": {
        "zoneId": {
          "type": "string",
          "required": true
        }
      },
      "cypher": "MATCH (z:FacilityZone {id: $zoneId})<-[:LOCATED_IN]-(m:Machine)-[:MONITORED_BY]->(s:Sensor) RETURN z.id AS zoneId, m.id AS machineId, s.id AS sensorId, s.type AS sensorType, s.reading AS reading, s.unit AS unit",
      "outputs": [
        {
          "name": "zoneId",
          "type": "string"
        },
        {
          "name": "machineId",
          "type": "string"
        },
        {
          "name": "sensorId",
          "type": "string"
        },
        {
          "name": "sensorType",
          "type": "string"
        },
        {
          "name": "reading",
          "type": "number"
        },
        {
          "name": "unit",
          "type": "string"
        }
      ],
      "examples": [
        {
          "inputs": {
            "zoneId": "Z1"
          }
        }
      ]
    },
    "dueForMaintenance": {
      "description": "Machines whose last maintenance is older than a cutoff datetime.",
      "inputs": {
        "cutoff": {
          "type": "string",
          "required": true,
          "example": "2025-10-01T00:00:00Z"
        }
      },
      "cypher": "MATCH (m:Machine) WHERE m.lastMaintenance < datetime($cutoff) RETURN m.id AS machineId, m.lastMaintenance AS lastMaintenance ORDER BY lastMaintenance ASC",
      "outputs": [
        {
          "name": "machineId",
          "type": "string"
        },
        {
          "name": "lastMaintenance",
          "type": "string"
        }
      ],
      "examples": [
        {
          "inputs": {
            "cutoff": "2025-10-01T00:00:00Z"
          }
        }
      ]
    }
  }
}